###############################################################################
#                                                                             #
#   These settings control the operation of the tircd program, telling it     #
#   which addresses to listen on, and where to store it's settings and logs.  #
#                                                                             #
###############################################################################

# This controls what address and port the server listens on.
# Comment out the address line to listen on all interfaces.
# address 127.0.0.1
port 6667

# This controls whether tircd accesses Twitter via SSL.
use_ssl 1
https_ca_file /etc/pki/tls/certs/ca-bundle.crt

# This controls where tircd will store it's configuration data.
# This is used to store per-user preferences and channel lineups.
# If not set, data will not be saved between user sessions.
storage_path /data

# This controls how POE logs data.
# Current options for logtype are 'stdout', 'stderr', 'file', or 'none',
# If file is chosen logfile must be set to a path for the log file.
logtype stdout
logfile tircd.log

# This option turns on lots of extra debugging.  The default setting is 0 or off.
debug 0

###############################################################################
#                                                                             #
#   These settings set the DEFAULT vaules for user settings such as delay     #
#   between timeline updates, automatically shortening URLs, how to handle    #
#   messages longer than 140 characters, etc.                                 #
#                                                                             #
#   User settings can be viewed by typing '/stats m' when connected. To       #
#   change a setting, use '/stats <setting name> <new value>'                 #
#                                                                             #
#   These settings are given to a user the first time they connect. When      #
#   their user config is saved (such as when disconnecting), those values     #
#   will be saved for future use.                                             #
#                                                                             #
###############################################################################

# auto_post controls whether any text entered into the #twitter channel is posted
# as a new tweet. Setting to 0 safeguards against posting information accidentally.
# Text that begins with ! is not posted to Twitter regardless of this setting,
# it is handled as a tircdbot command.
auto_post 0

# display_ticker_slots controls whether tircd displays a slot-id prior to every tweet.
# This slot-id is the for selecting a tweet for retweeting or replying-to.
display_ticker_slots 1

# store_access_tokens controls whether tircd saves Twitter OAuth access tokens
# in between tircd logins. By default tircd stores access tokens. This allows
# tircd to access Twitter the next time you reconnect. If you are running a
# public tircd server or are concerned about who has access to your storage_path
# directory set this setting to 0 and tokens will not be saved.
store_access_tokens 1

# This controls how often we check with Twitter for updates (in seconds).
# Currently The Twitter API enforces a limit of 350 api calls per hour.
# Updating the timeline takes 2 calls, while direct messages takes 1.
# It's a good idea to ensure your settings don't cause tircd to make more calls than that.
# The default settings will cause ~ 90 calls per hour.
update_timeline 120
update_directs 120

# This controls how many updates we'll ask from Twitter at a time. Valid values are 1 to 200.
timeline_count 50

# This controls how we handle tweets longer than 140 characters. There are three options:
# ignore - tircd will not do any checking and just pass what is entered to Twitter.
#   Twitter will automatically cut off messages longer than 140 chars.
# warn   - tircd will warn you that the message was too long, and it will not be sent.
# split  - tircd will split your message into multiple tweets.
#   The min_length and max_splits settings below control splits.
long_messages warn

# The min_length setting is the minimum length a split message has to be to send.
# This keeps tircd from sending a 1 character tweet if you had entered 141 characters.
min_length 20

# The max_splits setting limits the maximum number of tweets sent for one message.
# If the message splits into more parts than allowed, nothing is sent.
max_splits 5

# join_silent controls how tircd behaves when you join #twitter.
# 0 - This is the default behaivor, when joining #twitter, you will receive messages since the
# last time tircd recieved an update for your account. If the amount of tweets is greater
# than timeline_count, only that many messages will be retrieved, inclusive of most recent.
# 1 - tircd will be silent when joining the channel, and only show new messages as they come in.
join_silent 0

# Until 0.9 tircd would filter out messages sent by you from other clients so
# only traffic sent from irc would show up. You can now set this as an option
# if you want to see your update from other clients, set this to 0.
# 1 is the default and previous behaivor. Note: this can cause duplicate messages
# to show, as timeline updates can be delayed coming back from Twitter.
filter_self 1

# tircd will use the tinyurl api to automatically shorten URLs in your tweets if this is set to one.
# You must also have the URI::Find module installed so tircd can extract the URLs from your message.
shorten_urls 1

# If set tircd will convert <username>: <msg> replies into @<username> <msg>
# replies so you can use your IRC client's tab complettion to send Twitter apis.
convert_irc_replies 0

# Tweets coming from the Twitter API by default have their URLs changed to t.co URLs.
# Use expand_urls to have the URLs replaced with their un-shortened counterparts.
expand_urls 1

# If you would like users realnames to appear next to their Twitter username
# when they are @mentioned, use expand_usernames.
show_realname 0

# If set will create a new list on Twitter when you join a channel.
create_lists 1
