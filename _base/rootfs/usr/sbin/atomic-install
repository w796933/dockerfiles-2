#!/bin/bash -eu
. /etc/atomic-install
pushd /artifacts > /dev/null

# Install the environment file!
if [ -f environment ] && [ ! -e ${ENVFILE} ]; then
  mkdir -p $(dirname ${ENVFILE})
  parse_file environment > ${ENVFILE}
  echo "ENV FILE: ${ENVFILE}"
fi

# Global environment file
if [ ! -e ${ENVROOT}/environment ]; then
  ln -s /etc/environment ${ENVROOT}/environment
fi

# Install systemd unit files
find . -maxdepth 1 -regex '.+\.\(service\|timer\)\(\.d\)?$' \
  -exec cp -av "{}" "${HOST_SYSTEMD}"/ \; \
  -exec chcon -R --reference="${HOST_SYSTEMD}" "${HOST_SYSTEMD}/{}" \;

# Install scripts and aliases
[ -d profile.d ] && cp -avL profile.d "${HOST_ETC}"/
[ -d sbin ] && cp -avL sbin "${HOST_USR}"/
[ -d  bin ] && cp -avL  bin "${HOST_USR}"/

# Update instead of install?
if [ $# -ge 1 ] && [[ "$1" =~ ^(update|upgrade)$ ]]; then
  sed -i -E "s|^(IMAGE=).*|\1${IMAGE}|" ${ENVFILE}
  # Execute extension...
  if [ -f atomic-update.sh ]; then
    . atomic-update.sh
  fi
  popd > /dev/null
  exit 0
fi

# Initialize the volumes...
[ -n "${CONFDIR}" ] && mkvol "${HOST}/${CONFDIR}"
[ -n "${DATADIR}" ] && mkvol "${HOST}/${DATADIR}"
[ -n "${LOGDIR}"  ] && mkvol "${HOST}/${LOGDIR}"

# Execute extension...
if [ -f atomic-install.sh ]; then
  . atomic-install.sh
fi

popd > /dev/null
exit 0
